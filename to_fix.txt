"                        "ls
ls ''
<'Makefile'<s"1" pwd>>a
 p'w''d' >>a
p'w''d' >> a
echo $@USER
echo $1USER
echo $"USER"
"" ls
< "Makefile" "ls" "-la"
<< "" cat
ls > " "
"Makefile"a""


///////////////////////////////////////////////
 echo $USER$var\$USER$USER\$USERtest$USER
 echo $""
 echo $"HO""ME"

 // ///////            Commands         //////////////////////////////////
void			built_in(t_envarment *var ,t_command *list );
int 			built_in_exist( t_command *list) ;
void            ft_cd(t_command *list , int indx);
void            ft_pwd(t_command *va_list);
void            ft_export( t_envarment *var , t_command *str , int indx);
void            ft_env( t_envarment *var);
void            ft_unset(t_envarment **var , t_command *list , int indx);
void            ft_echo(t_command *list , int indx);
// void            ft_echo_flag(t_command *list , int k );
void			ft_exit(t_envarment *var ,t_command *list);
char 			**array_env(t_envarment *var);
char			*ft_strjoin_1(char *s1, char *s2);
int				len_var(t_envarment *var);


//////////////////////     free      /////////////////////////////////
void	free_ft_split(char 	**list);
int		check_is_valid(char 	*str );
void	ft_error(char 	*str , char *ptr);

if (!s2)
	{
		s2 = ft_calloc(1, sizeof(char));
		s2[0] = '\0';
	}
		i = 0;
	free(pids);
	while (i < num_cmd - 1)
	{
		free(pipefd[i]);
		i++;
	}
	free(pipefd);